<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips'n'tricks | Guillem Fernandez]]></title>
  <link href="http://guillemf.github.io/blog/categories/tipsn-tricks/atom.xml" rel="self"/>
  <link href="http://guillemf.github.io/"/>
  <updated>2016-09-16T18:46:25+02:00</updated>
  <id>http://guillemf.github.io/</id>
  <author>
    <name><![CDATA[Guillem Fernandez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MFMailComposeViewController Nightmare]]></title>
    <link href="http://guillemf.github.io/blog/2015/01/23/mfmailcomposeviewcontroller-nightmare/"/>
    <updated>2015-01-23T10:30:03+01:00</updated>
    <id>http://guillemf.github.io/blog/2015/01/23/mfmailcomposeviewcontroller-nightmare</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just gone through MFMailComposeViewController because I had a problem with the look&amp;feel of the Cancel and Save buttons on the mail compose dialog toolbar. They just looked too, how to say, transparent. The problem was that in the app I am working on I use appearance proxy. That seemed not to work with MFMailComposeViewController.</p>

<!-- more -->


<p>My first approach was to change those behavior that didn&rsquo;t fit in my needs. And the result was &hellip; nothing. It&rsquo;s like that doesn&rsquo;t apply to it if you are using a global setting. You can find many solutions thought the internet telling you to user setTintColor on the MFMailComposeViewController object you&rsquo;ve just created, and they will work if you don&rsquo;t use the appearance proxy at some point of your app initialization like:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="nl">appearanceWhenContainedIn</span><span class="p">:[</span><span class="bp">UINavigationBar</span> <span class="k">class</span><span class="p">],</span> <span class="nb">nil</span><span class="p">]</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="n">buttonAttributes</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[[</span><span class="bp">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setTintColor</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>If you did it, forget about using:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">mailViewController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="nl">setTintColor</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">redColor</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nb">self</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="n">mailViewController</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>The result is going to be the same nothing I had.</p>

<p>But the good new is that there is a solution. I know it&rsquo;s not the most elegant one but it works and you can save a lot of time investigating that I already invested. The solution is to change the global setting in the appearance proxy to match what you need and set it back to the original behavior when the dialog is dismissed.</p>

<p>As you know there is not going to be any dialog with navigation bar while the mail composer is present, it is safe to change it. To revert the changes, you need to do it in <em>- (void)mailComposeController:(MFMailComposeViewController<em>)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError</em>)error</em>. I use a singleton to contain the configuration colors I need to restore the original look&amp;feel, if you don&rsquo;t have it, you need to implement a mechanism to do it or you&rsquo;ll have a coupled and dependent code.</p>

<p>Thanks for reading and don&rsquo;t forget to share and follow me in twitter @guillemfg.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 7 and iOS 8 Living Together]]></title>
    <link href="http://guillemf.github.io/blog/2015/01/20/ios-7-and-ios-8-living-together/"/>
    <updated>2015-01-20T19:02:10+01:00</updated>
    <id>http://guillemf.github.io/blog/2015/01/20/ios-7-and-ios-8-living-together</id>
    <content type="html"><![CDATA[<p>This is the first post of 2015. I want to start it with a new category, Tips and Tricks. I&rsquo;ve found that in my daily work I am fixing many different small pieces of code that, in some cases, will be interesting for you, so I decided to share it in my blog.</p>

<p>The firs one is how to include code that behaves differently when it&rsquo;s running on iOS 7 than when it&rsquo;s running on iOS 8, for example. I&rsquo;ve found two main different ways to do it.</p>

<!-- more -->


<h2>Check the responsiveness to a selector.</h2>

<p>Most of the times, the problem comes because of a change in the signature of an API or the deprecation of the methods. In this case the easiest way is to check if the object responds to the given selector. Two examples are NSOperation and UIApplication.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">NSOperation</span> <span class="o">*</span><span class="n">myOperation</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">myOperation</span> <span class="nl">respondsToSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">setName</span><span class="p">)])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 8 specific code</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 7 speficic code</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">UIApplication</span> <span class="o">*</span><span class="n">app</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">app</span> <span class="nl">respondsToSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">registerForRemoteNotifications</span><span class="p">)])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 8 specific code</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 7 speficic code</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2>Check the value of <em>NSFundationVersionNumber</em></h2>

<p>The second option is using <em>NSFundationVersionNumber</em>. This option gives you the flexibility to behave differently not because of any restriction, but because functional requirements or just because you like it.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="p">(</span><span class="n">floor</span><span class="p">(</span><span class="n">NSFoundationVersionNumber</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="n">NSFoundationVersionNumber_iOS_7_0</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// iOS 7.0 specific code</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">floor</span><span class="p">(</span><span class="n">NSFoundationVersionNumber</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="n">NSFoundationVersionNumber_iOS_7_1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 7.1 specific code</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// iOS 8.X specific code</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>You can use the defined constants:</p>

<ul>
<li>NSFoundationVersionNumber_iPhoneOS_2_0</li>
<li>NSFoundationVersionNumber_iPhoneOS_2_1</li>
<li>NSFoundationVersionNumber_iPhoneOS_2_2</li>
<li>NSFoundationVersionNumber_iPhoneOS_3_0</li>
<li>NSFoundationVersionNumber_iPhoneOS_3_1</li>
<li>NSFoundationVersionNumber_iPhoneOS_3_2</li>
<li>NSFoundationVersionNumber_iOS_4_0</li>
<li>NSFoundationVersionNumber_iOS_4_1</li>
<li>NSFoundationVersionNumber_iOS_4_2</li>
<li>NSFoundationVersionNumber_iOS_4_3</li>
<li>NSFoundationVersionNumber_iOS_5_0</li>
<li>NSFoundationVersionNumber_iOS_5_1</li>
<li>NSFoundationVersionNumber_iOS_6_0</li>
<li>NSFoundationVersionNumber_iOS_6_1</li>
<li>NSFoundationVersionNumber_iOS_7_0</li>
<li>NSFoundationVersionNumber_iOS_7_1</li>
</ul>


<p>Also OS X has its own ones.</p>
]]></content>
  </entry>
  
</feed>
